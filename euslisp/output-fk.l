(load "arm-robot.l")

(setq *step-num* 24)
(setq *half-step-num* (/ *step-num* 2.0))

(defun fks()
  (dotimes (i1 *step-num*)
    (dotimes (i2 *step-num*)
      (dotimes (i3 *step-num*)
	(dotimes (i4 *step-num*)
	  (dotimes (i5 *step-num*)
	    (send *robot* :angle-vector (float-vector
					 (/ (* 120 (- i1 *half-step-num*)) *half-step-num*)
					 (/ (* 120 (- i2 *half-step-num*)) *half-step-num*)
					 (/ (* 120 (- i3 *half-step-num*)) *half-step-num*)
					 (/ (* 120 (- i4 *half-step-num*)) *half-step-num*)
					 (/ (* 120 (- i5 *half-step-num*)) *half-step-num*)
					 )
		  )
	    (format t "~A ~A ~A ~A ~A ~A ~A ~A ~A ~A ~A ~A ~A ~A ~A ~A ~A ~A ~A ~A ~A ~A ~A~%"
		    (elt (send *robot* :angle-vector) 0)
		    (elt (send *robot* :angle-vector) 1)
		    (elt (send *robot* :angle-vector) 2)
		    (elt (send *robot* :angle-vector) 3)
		    (elt (send *robot* :angle-vector) 4)

		    (elt (send (send *robot* :get-l2) :worldpos) 0)
		    (elt (send (send *robot* :get-l2) :worldpos) 1)
		    (elt (send (send *robot* :get-l2) :worldpos) 2)
		    (elt (send (send *robot* :get-l3) :worldpos) 0)
		    (elt (send (send *robot* :get-l3) :worldpos) 1)
		    (elt (send (send *robot* :get-l3) :worldpos) 2)
		    (elt (send (send *robot* :get-l4) :worldpos) 0)
		    (elt (send (send *robot* :get-l4) :worldpos) 1)
		    (elt (send (send *robot* :get-l4) :worldpos) 2)
		    (elt (send (send *robot* :get-l5) :worldpos) 0)
		    (elt (send (send *robot* :get-l5) :worldpos) 1)
		    (elt (send (send *robot* :get-l5) :worldpos) 2)
		    (elt (send (send *robot* :get-l6) :worldpos) 0)
		    (elt (send (send *robot* :get-l6) :worldpos) 1)
		    (elt (send (send *robot* :get-l6) :worldpos) 2)
		    (elt (send *robot* :end-coords :worldpos) 0)
		    (elt (send *robot* :end-coords :worldpos) 1)
		    (elt (send *robot* :end-coords :worldpos) 2)		    
		    )
	    )
	  )
	)
      )
    )
  )


(defun fks-test()
  (dotimes (i1 4)
    (dotimes (i2 4)
      (dotimes (i3 4)
	(dotimes (i4 4)
	  (dotimes (i5 4)
	    (send *robot* :angle-vector (float-vector
					 (/ (* 120 (- i1 2.2)) 5.0)
					 (/ (* 120 (- i2 2.2)) 5.0)
					 (/ (* 120 (- i3 2.2)) 5.0)
					 (/ (* 120 (- i4 2.2)) 5.0)
					 (/ (* 120 (- i5 2.2)) 5.0)
					 )
		  )
	    (format t "~A ~A ~A ~A ~A ~A ~A ~A ~A ~A ~A ~A ~A ~A ~A ~A ~A ~A ~A ~A ~A ~A ~A~%"
		    (elt (send *robot* :angle-vector) 0)
		    (elt (send *robot* :angle-vector) 1)
		    (elt (send *robot* :angle-vector) 2)
		    (elt (send *robot* :angle-vector) 3)
		    (elt (send *robot* :angle-vector) 4)

		    (elt (send (send *robot* :get-l2) :worldpos) 0)
		    (elt (send (send *robot* :get-l2) :worldpos) 1)
		    (elt (send (send *robot* :get-l2) :worldpos) 2)
		    (elt (send (send *robot* :get-l3) :worldpos) 0)
		    (elt (send (send *robot* :get-l3) :worldpos) 1)
		    (elt (send (send *robot* :get-l3) :worldpos) 2)
		    (elt (send (send *robot* :get-l4) :worldpos) 0)
		    (elt (send (send *robot* :get-l4) :worldpos) 1)
		    (elt (send (send *robot* :get-l4) :worldpos) 2)
		    (elt (send (send *robot* :get-l5) :worldpos) 0)
		    (elt (send (send *robot* :get-l5) :worldpos) 1)
		    (elt (send (send *robot* :get-l5) :worldpos) 2)
		    (elt (send (send *robot* :get-l6) :worldpos) 0)
		    (elt (send (send *robot* :get-l6) :worldpos) 1)
		    (elt (send (send *robot* :get-l6) :worldpos) 2)
		    (elt (send *robot* :end-coords :worldpos) 0)
		    (elt (send *robot* :end-coords :worldpos) 1)
		    (elt (send *robot* :end-coords :worldpos) 2)		    
		    )
	    )
	  )
	)
      )
    )
  )

(fks)
;;(fks-test)
